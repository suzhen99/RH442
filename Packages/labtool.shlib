#!/bin/bash

LOG_FACILITY=local0
LOG_PRIORITY=info
LOG_TAG="${0##*/}"
DEBUG=true
LOGGER='/usr/bin/logger'

function log {
  if [[ ${#1} -gt 0 ]] ; then
    $LOGGER -p ${LOG_FACILITY}.${LOG_PRIORITY} -t $LOG_TAG -- "$1"
  else
    while read data ; do
        $LOGGER -p ${LOG_FACILITY}.${LOG_PRIORITY} -t $LOG_TAG -- "$1" "$data"
    done
  fi
}

function debug {
  if [[ ${#1} -gt 0 ]] ; then
    msg="$1"
    if [[ "$DEBUG" = "true" ]] ; then
        echo "$msg"
    fi  
    log "$msg"
  else
    while read data ; do
        if [[ "$DEBUG" = "true" ]] ; then
            echo "$data"
        fi
        log "$data"
    done
  fi
}

function pad {
  local text="$1"
  local dots='...............................................................'
  printf '%s%s  ' "${text}" "${dots:${#text}}"
}

function print_SUCCESS() {
  echo -e '\033[1;36mSUCCESS\033[0;39m'
}

function check_tcp_port {
  if [[ ${#1} -gt 0 && ${#2} -gt 0 ]]; then
    # Sending it to the log always returns 0
    ($(echo "sven" >/dev/tcp/$1/$2)) && return 0
  fi
  return 1
}

function wait_online {
  local TARGET=$1
  pad " Â· Waiting for ${TARGET} to become available"
  while !  ping -c1 -w1 ${TARGET} &> /dev/null
  do
    sleep 1s
  done
  while ! check_tcp_port ${TARGET} 22 2>/dev/null
  do
    sleep 1s
  done
  print_SUCCESS
}
